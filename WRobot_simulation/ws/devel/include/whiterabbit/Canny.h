// Generated by gencpp from file whiterabbit/Canny.msg
// DO NOT EDIT!


#ifndef WHITERABBIT_MESSAGE_CANNY_H
#define WHITERABBIT_MESSAGE_CANNY_H

#include <ros/service_traits.h>


#include <whiterabbit/CannyRequest.h>
#include <whiterabbit/CannyResponse.h>


namespace whiterabbit
{

struct Canny
{

typedef CannyRequest Request;
typedef CannyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Canny
} // namespace whiterabbit


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::whiterabbit::Canny > {
  static const char* value()
  {
    return "5d927b78b5235b8ef943f0f8abea7a79";
  }

  static const char* value(const ::whiterabbit::Canny&) { return value(); }
};

template<>
struct DataType< ::whiterabbit::Canny > {
  static const char* value()
  {
    return "whiterabbit/Canny";
  }

  static const char* value(const ::whiterabbit::Canny&) { return value(); }
};


// service_traits::MD5Sum< ::whiterabbit::CannyRequest> should match 
// service_traits::MD5Sum< ::whiterabbit::Canny > 
template<>
struct MD5Sum< ::whiterabbit::CannyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::whiterabbit::Canny >::value();
  }
  static const char* value(const ::whiterabbit::CannyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::whiterabbit::CannyRequest> should match 
// service_traits::DataType< ::whiterabbit::Canny > 
template<>
struct DataType< ::whiterabbit::CannyRequest>
{
  static const char* value()
  {
    return DataType< ::whiterabbit::Canny >::value();
  }
  static const char* value(const ::whiterabbit::CannyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::whiterabbit::CannyResponse> should match 
// service_traits::MD5Sum< ::whiterabbit::Canny > 
template<>
struct MD5Sum< ::whiterabbit::CannyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::whiterabbit::Canny >::value();
  }
  static const char* value(const ::whiterabbit::CannyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::whiterabbit::CannyResponse> should match 
// service_traits::DataType< ::whiterabbit::Canny > 
template<>
struct DataType< ::whiterabbit::CannyResponse>
{
  static const char* value()
  {
    return DataType< ::whiterabbit::Canny >::value();
  }
  static const char* value(const ::whiterabbit::CannyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WHITERABBIT_MESSAGE_CANNY_H
